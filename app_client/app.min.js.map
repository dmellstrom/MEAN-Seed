{"version":3,"sources":["main.js","about/about.controller.js","home/home.controller.js","profile/profile.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/services/authentication.service.js","common/services/data.service.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","protected","$on","event","nextRoute","currentRoute","indexOf","path","isLoggedIn","angular","module","aboutCtrl","console","log","homeCtrl","vm","this","currentUser","$inject","profileCtrl","meanData","user","getProfile","then","data","catch","error","loginCtrl","credentials","email","password","onSubmit","login","err","alert","message","loginForm","focus","registerCtrl","name","register","registerForm","$http","$window","saveClaim","claim","localStorage","JSON","stringify","getClaim","parse","exp","Date","now","post","success","logout","removeItem","service","get","response","navigationCtrl","$route","reload","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/about', {\n        templateUrl: 'about/about.view.html',\n        controller: 'aboutCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n\n    // protected routes\n    $rootScope.protected = ['/profile'];\n\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($rootScope.protected.indexOf($location.path()) != -1 && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();","(function() {\n  \n  angular\n  .module('meanApp')\n  .controller('aboutCtrl', aboutCtrl);\n\n  function aboutCtrl() {\n    var vm = this;\n\n    console.log('About controller');\n  }\n\n})();","(function() {\n  \n  angular\n  .module('meanApp')\n  .controller('homeCtrl', homeCtrl);\n\n  homeCtrl.$inject = ['authentication'];\n  function homeCtrl(authentication) {\n    var vm = this;\n\n    vm.currentUser = authentication.currentUser();\n    \n    console.log('Home controller');\n  }\n\n})();","(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = null;\n\n    meanData.getProfile().then(function(data) {\n      vm.user = data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err.message);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n    loginForm.email.focus();\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err.message);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n    registerForm.name.focus();\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveClaim = function (claim) {\n      $window.localStorage['mean-claim'] = JSON.stringify(claim);\n    };\n\n    var getClaim = function () {\n      if ($window.localStorage['mean-claim']) {\n        return JSON.parse($window.localStorage['mean-claim']);\n      }\n      return false;\n    };\n\n    var isLoggedIn = function() {\n      var claim = getClaim();\n\n      if(claim){\n        return claim.exp > Date.now() / 1000;\n      }\n      return false;\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var claim = getClaim();\n        return {\n          email : claim.email,\n          name : claim.name\n        };\n      }\n      return false;\n    };\n\n    var register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveClaim(data.claim);\n      });\n    };\n\n    var login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveClaim(data.claim);\n      });\n    };\n\n    var logout = function() {\n      return $http.post('/api/logout').success(function() {\n        $window.localStorage.removeItem('mean-claim');\n      });\n    };\n\n    return {\n      isLoggedIn : isLoggedIn,\n      currentUser : currentUser,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n})();","(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http'];\n  function meanData ($http) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile')\n        .then(function(response){\n          return response.data;\n        });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$rootScope', '$location', '$route', 'authentication'];\n  function navigationCtrl($rootScope, $location, $route, authentication) {\n    var vm = this;\n\n    vm.currentUser = authentication.currentUser();\n\n    vm.logout = function() {\n        authentication.logout().then(function() {\n          if ($rootScope.protected.indexOf($location.path()) != -1) {\n            $location.path('/');\n          } else {\n            $route.reload();\n          }\n        })\n    }\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"],"sourceRoot":"/source/"}