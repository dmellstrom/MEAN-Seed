{"version":3,"sources":["main.js","about/about.controller.js","home/home.controller.js","profile/profile.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/services/authentication.service.js","common/services/data.service.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","protected","$on","event","nextRoute","currentRoute","indexOf","path","isLoggedIn","angular","module","aboutCtrl","console","log","homeCtrl","vm","this","currentUser","$inject","profileCtrl","meanData","user","getProfile","success","data","error","e","loginCtrl","credentials","email","password","onSubmit","login","err","alert","message","then","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","$route","reload","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/about', {\n        templateUrl: 'about/about.view.html',\n        controller: 'aboutCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n\n    // list protected routes\n    $rootScope.protected = ['/profile'];\n\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($rootScope.protected.indexOf($location.path()) != -1 && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();","(function() {\n  \n  angular\n  .module('meanApp')\n  .controller('aboutCtrl', aboutCtrl);\n\n  function aboutCtrl() {\n    var vm = this;\n\n    console.log('About controller');\n  }\n\n})();","(function() {\n  \n  angular\n  .module('meanApp')\n  .controller('homeCtrl', homeCtrl);\n\n  homeCtrl.$inject = ['authentication'];\n  function homeCtrl(authentication) {\n    var vm = this;\n    \n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n    \n    console.log('Home controller');\n  }\n\n})();","(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();","(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err.message);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err.message);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      currentUser : currentUser,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();","(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$rootScope', '$location', '$route', 'authentication'];\n  function navigationCtrl($rootScope, $location, $route, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n    vm.logout = function() {\n        authentication.logout();\n        if ($rootScope.protected.indexOf($location.path()) != -1) {\n          $location.path('/');\n        } else {\n          $route.reload();\n        }\n    }\n  }\n\n})();","(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"],"sourceRoot":"/source/"}